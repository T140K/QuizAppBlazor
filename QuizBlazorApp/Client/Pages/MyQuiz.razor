@page "/myquiz"
@using QuizBlazorApp.Shared.ViewModels
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Authorization
@using System.Web;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient _httpClient
@inject IJSRuntime JSRuntime

<PageTitle>My Quizzes</PageTitle>

<h2>Welcome, @userName!</h2>

@if (quizViewModel == null || quizViewModel.Length < 1)
{
    <p>You dont have any quizzes, you should make some!</p>
}
else
{
    <h4>Here are your quizes</h4>
    @foreach (var quiz in quizViewModel)
    {
        <div style="border: 1px solid black; padding: 2px; padding-left: 5px; width:auto; padding-bottom: 10px; margin: 5px;">
            <div style="justify-content:space-between; display:flex;">
                <div>
                    <h5>@quiz.QuizName</h5>
                </div>
                <div>
                    <button @onclick="() => CopyLinkToClipboard(quiz.QuizName)">Copy Link</button>
                    <a>Show quiz history</a>
                </div>
            </div>
            <ul>
                @foreach (var question in quiz.Questions)
                {
                    <li>
                        @question.QuestionName
                        @if (question.IsTimed)
                        {
                            <p>(The time limit is @question.TimeLimit seconds)</p>
                        }

                        @if (question.UseMedia)
                        {
                            @if (question.MediaType == "image")
                            {
                                <img src="@question.MediaUrl" alt="Image preview" style="max-width: 100%; max-height: 200px;" />
                            }
                            @if (question.MediaType == "video")
                            {
                                <video controls style="max-width: 100%; max-height: 200px;">
                                    <source src="@question.MediaUrl" type="video/mp4">
                                    Your browser does not support the video tag.
                                </video>
                            }
                            @if (question.MediaType == "youtube")
                            {
                                var embedUrl = GetYouTubeEmbedUrl(question.MediaUrl);
                                <iframe width="560" height="315" src="@embedUrl" frameborder="0" allowfullscreen></iframe>
                            }
                        }
                        <ul>
                            @foreach (var answer in question.Answers)
                            {
                                @if (@answer.CorrectAnswer == true)
                                {
                                    <li><strong>@answer.AnswerTitle</strong></li>
                                }
                                else
                                {
                                    <li>@answer.AnswerTitle</li>
                                }
                            }
                        </ul>
                    </li>
                }
            </ul>
        </div>
    }
}

@code {
    private string userName;
    private QuizViewModel[] quizViewModel;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        userName = user.Identity?.Name;

        await LoadUserQuizData();
    }

    private async Task CopyLinkToClipboard(string quiz)
    {
        string linkToCopy = $"https://localhost:7179/playquiz/{quiz}";
        await JSRuntime.InvokeVoidAsync("copyTextToClipboard", linkToCopy);
    }

    private async Task LoadUserQuizData()
    {
        try
        {
            var response = await _httpClient.GetAsync("/api/quiz/userquiz");
            if (response.IsSuccessStatusCode)
            {
                var jsonString = await response.Content.ReadAsStringAsync();
                if (string.IsNullOrEmpty(jsonString))
                {
                    Console.WriteLine("jsonString is null or empty");
                }

                quizViewModel = JsonSerializer.Deserialize<QuizViewModel[]>(jsonString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });            }
            else
            {
                Console.WriteLine("API request failed");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Getting quiz data failed {ex.Message}");
        }
    }

    private string GetYouTubeEmbedUrl(string url)
    {
        if (string.IsNullOrEmpty(url))
        {
            return string.Empty;
        }

        var youtubeVideoId = string.Empty;
        if (url.Contains("youtube.com"))
        {
            var uri = new Uri(url);
            var query = HttpUtility.ParseQueryString(uri.Query);
            youtubeVideoId = query["v"];
        }
        else if (url.Contains("youtu.be"))
        {
            youtubeVideoId = url.Split('/').Last();
        }

        return !string.IsNullOrEmpty(youtubeVideoId) ? $"https://www.youtube.com/embed/{youtubeVideoId}" : string.Empty;
    }

    private bool IsYouTubeVideo(string url)
    {
        return url.Contains("youtube.com") || url.Contains("youtu.be");
    }
}
